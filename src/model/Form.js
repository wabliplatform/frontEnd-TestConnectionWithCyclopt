/**
 * TempApi
 * This is a sample openApi document
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: lampralexandros@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Form model module.
 * @module model/Form
 * @version 1.0.0
 */
class Form {
    /**
     * Constructs a new <code>Form</code>.
     * @alias module:model/Form
     * @param formName {String} 
     */
    constructor(formName) { 
        
        Form.initialize(this, formName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, formName) { 
        obj['formName'] = formName;
    }

    /**
     * Constructs a <code>Form</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Form} obj Optional instance to populate.
     * @return {module:model/Form} The populated <code>Form</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Form();

            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('formName')) {
                obj['formName'] = ApiClient.convertToType(data['formName'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} _id
 */
Form.prototype['_id'] = undefined;

/**
 * @member {String} formName
 */
Form.prototype['formName'] = undefined;






export default Form;

